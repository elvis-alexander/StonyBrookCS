
<!-- saved from url=(0124)https://blackboard.stonybrook.edu/bbcswebdav/pid-4073657-dt-content-rid-27103904_1/courses/1174-CSE-214-SEC02-42662/hw7.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><style type="text/css">@import url('https://themes.googleusercontent.com/fonts/css?kit=lhDjYqiy3mZ0x6ROQEUoUw');.lst-kix_5y5k5tod9hw6-1>li{counter-increment:lst-ctn-kix_5y5k5tod9hw6-1}.lst-kix_j1uh4ob0xbk3-1>li{counter-increment:lst-ctn-kix_j1uh4ob0xbk3-1}.lst-kix_w6xlf9eamw45-2>li:before{content:"\0025a0  "}.lst-kix_5y5k5tod9hw6-1>li:before{content:"" counter(lst-ctn-kix_5y5k5tod9hw6-1,lower-latin) ". "}.lst-kix_twwh50f77grw-2>li:before{content:"\0025a0  "}.lst-kix_twwh50f77grw-1>li:before{content:"\0025cb  "}.lst-kix_twwh50f77grw-3>li:before{content:"\0025cf  "}ol.lst-kix_5y5k5tod9hw6-1{list-style-type:none}.lst-kix_twwh50f77grw-0>li:before{content:"\0025cf  "}ol.lst-kix_5y5k5tod9hw6-2{list-style-type:none}.lst-kix_w6xlf9eamw45-3>li:before{content:"\0025cf  "}.lst-kix_5y5k5tod9hw6-0>li:before{content:"" counter(lst-ctn-kix_5y5k5tod9hw6-0,decimal) ". "}ol.lst-kix_5y5k5tod9hw6-0{list-style-type:none}.lst-kix_5y5k5tod9hw6-4>li:before{content:"" counter(lst-ctn-kix_5y5k5tod9hw6-4,lower-latin) ". "}.lst-kix_twwh50f77grw-4>li:before{content:"\0025cb  "}ol.lst-kix_5y5k5tod9hw6-4.start{counter-reset:lst-ctn-kix_5y5k5tod9hw6-4 0}ol.lst-kix_5y5k5tod9hw6-5{list-style-type:none}ol.lst-kix_5y5k5tod9hw6-6{list-style-type:none}.lst-kix_w6xlf9eamw45-4>li:before{content:"\0025cb  "}.lst-kix_w6xlf9eamw45-5>li:before{content:"\0025a0  "}ol.lst-kix_5y5k5tod9hw6-3{list-style-type:none}ol.lst-kix_5y5k5tod9hw6-4{list-style-type:none}.lst-kix_5y5k5tod9hw6-5>li:before{content:"" counter(lst-ctn-kix_5y5k5tod9hw6-5,lower-roman) ". "}.lst-kix_w6xlf9eamw45-6>li:before{content:"\0025cf  "}ol.lst-kix_5y5k5tod9hw6-7{list-style-type:none}.lst-kix_nurbsb4nxavd-7>li{counter-increment:lst-ctn-kix_nurbsb4nxavd-7}.lst-kix_5y5k5tod9hw6-6>li:before{content:"" counter(lst-ctn-kix_5y5k5tod9hw6-6,decimal) ". "}ol.lst-kix_5y5k5tod9hw6-8{list-style-type:none}.lst-kix_w6xlf9eamw45-8>li:before{content:"\0025a0  "}ol.lst-kix_j1uh4ob0xbk3-4.start{counter-reset:lst-ctn-kix_j1uh4ob0xbk3-4 0}.lst-kix_w6xlf9eamw45-7>li:before{content:"\0025cb  "}.lst-kix_twwh50f77grw-8>li:before{content:"\0025a0  "}.lst-kix_5y5k5tod9hw6-3>li:before{content:"" counter(lst-ctn-kix_5y5k5tod9hw6-3,decimal) ". "}.lst-kix_twwh50f77grw-5>li:before{content:"\0025a0  "}.lst-kix_twwh50f77grw-7>li:before{content:"\0025cb  "}.lst-kix_5y5k5tod9hw6-2>li:before{content:"" counter(lst-ctn-kix_5y5k5tod9hw6-2,lower-roman) ". "}.lst-kix_twwh50f77grw-6>li:before{content:"\0025cf  "}.lst-kix_nurbsb4nxavd-1>li:before{content:"" counter(lst-ctn-kix_nurbsb4nxavd-1,lower-latin) ". "}.lst-kix_nurbsb4nxavd-2>li:before{content:"" counter(lst-ctn-kix_nurbsb4nxavd-2,lower-roman) ". "}.lst-kix_nurbsb4nxavd-0>li:before{content:"" counter(lst-ctn-kix_nurbsb4nxavd-0,decimal) ". "}ol.lst-kix_nurbsb4nxavd-3.start{counter-reset:lst-ctn-kix_nurbsb4nxavd-3 0}.lst-kix_nurbsb4nxavd-7>li:before{content:"" counter(lst-ctn-kix_nurbsb4nxavd-7,lower-latin) ". "}.lst-kix_tm398gvkdxtj-3>li:before{content:"\0025cf  "}.lst-kix_nurbsb4nxavd-6>li:before{content:"" counter(lst-ctn-kix_nurbsb4nxavd-6,decimal) ". "}.lst-kix_tm398gvkdxtj-4>li:before{content:"\0025cb  "}.lst-kix_tm398gvkdxtj-5>li:before{content:"\0025a0  "}.lst-kix_nurbsb4nxavd-3>li:before{content:"" counter(lst-ctn-kix_nurbsb4nxavd-3,decimal) ". "}.lst-kix_nurbsb4nxavd-5>li:before{content:"" counter(lst-ctn-kix_nurbsb4nxavd-5,lower-roman) ". "}.lst-kix_tm398gvkdxtj-6>li:before{content:"\0025cf  "}.lst-kix_nurbsb4nxavd-3>li{counter-increment:lst-ctn-kix_nurbsb4nxavd-3}.lst-kix_nurbsb4nxavd-4>li:before{content:"" counter(lst-ctn-kix_nurbsb4nxavd-4,lower-latin) ". "}.lst-kix_tm398gvkdxtj-8>li:before{content:"\0025a0  "}ul.lst-kix_t8o3of4204bd-1{list-style-type:none}ul.lst-kix_t8o3of4204bd-0{list-style-type:none}ul.lst-kix_t8o3of4204bd-5{list-style-type:none}.lst-kix_tm398gvkdxtj-7>li:before{content:"\0025cb  "}ul.lst-kix_t8o3of4204bd-4{list-style-type:none}ul.lst-kix_t8o3of4204bd-3{list-style-type:none}ul.lst-kix_t8o3of4204bd-2{list-style-type:none}ul.lst-kix_t8o3of4204bd-8{list-style-type:none}ul.lst-kix_t8o3of4204bd-7{list-style-type:none}ul.lst-kix_t8o3of4204bd-6{list-style-type:none}.lst-kix_nurbsb4nxavd-8>li:before{content:"" counter(lst-ctn-kix_nurbsb4nxavd-8,lower-roman) ". "}ol.lst-kix_nurbsb4nxavd-8.start{counter-reset:lst-ctn-kix_nurbsb4nxavd-8 0}ul.lst-kix_vuvi6sacb86n-7{list-style-type:none}.lst-kix_z6olvamjf8bm-2>li:before{content:"\0025a0  "}ul.lst-kix_vuvi6sacb86n-6{list-style-type:none}ul.lst-kix_vuvi6sacb86n-8{list-style-type:none}ul.lst-kix_vuvi6sacb86n-3{list-style-type:none}.lst-kix_z6olvamjf8bm-4>li:before{content:"\0025cb  "}ol.lst-kix_j1uh4ob0xbk3-6.start{counter-reset:lst-ctn-kix_j1uh4ob0xbk3-6 0}ul.lst-kix_vuvi6sacb86n-2{list-style-type:none}ul.lst-kix_vuvi6sacb86n-5{list-style-type:none}ul.lst-kix_vuvi6sacb86n-4{list-style-type:none}ol.lst-kix_5y5k5tod9hw6-2.start{counter-reset:lst-ctn-kix_5y5k5tod9hw6-2 0}.lst-kix_5y5k5tod9hw6-8>li{counter-increment:lst-ctn-kix_5y5k5tod9hw6-8}ol.lst-kix_nurbsb4nxavd-5.start{counter-reset:lst-ctn-kix_nurbsb4nxavd-5 0}.lst-kix_z6olvamjf8bm-0>li:before{content:"\0025cf  "}ul.lst-kix_szyq47ftc9sq-8{list-style-type:none}ul.lst-kix_szyq47ftc9sq-7{list-style-type:none}ul.lst-kix_szyq47ftc9sq-6{list-style-type:none}ul.lst-kix_szyq47ftc9sq-5{list-style-type:none}ul.lst-kix_szyq47ftc9sq-4{list-style-type:none}ul.lst-kix_szyq47ftc9sq-3{list-style-type:none}ul.lst-kix_szyq47ftc9sq-2{list-style-type:none}ul.lst-kix_szyq47ftc9sq-1{list-style-type:none}ul.lst-kix_szyq47ftc9sq-0{list-style-type:none}.lst-kix_j1uh4ob0xbk3-8>li{counter-increment:lst-ctn-kix_j1uh4ob0xbk3-8}.lst-kix_tm398gvkdxtj-1>li:before{content:"\0025cb  "}.lst-kix_1lheyf7epzh4-5>li:before{content:"\0025a0  "}ul.lst-kix_9fgmxh8kmqlq-0{list-style-type:none}ul.lst-kix_9fgmxh8kmqlq-1{list-style-type:none}.lst-kix_1lheyf7epzh4-3>li:before{content:"\0025cf  "}.lst-kix_5y5k5tod9hw6-7>li:before{content:"" counter(lst-ctn-kix_5y5k5tod9hw6-7,lower-latin) ". "}.lst-kix_1lheyf7epzh4-1>li:before{content:"\0025cb  "}.lst-kix_8lzf2aku9ku4-1>li:before{content:"\0025cb  "}.lst-kix_w6xlf9eamw45-0>li:before{content:"\0025cf  "}ul.lst-kix_oidx9jr13yvq-8{list-style-type:none}ul.lst-kix_oidx9jr13yvq-7{list-style-type:none}ul.lst-kix_oidx9jr13yvq-6{list-style-type:none}ul.lst-kix_oidx9jr13yvq-5{list-style-type:none}ul.lst-kix_oidx9jr13yvq-4{list-style-type:none}ul.lst-kix_oidx9jr13yvq-3{list-style-type:none}ul.lst-kix_oidx9jr13yvq-2{list-style-type:none}ul.lst-kix_9fgmxh8kmqlq-4{list-style-type:none}.lst-kix_z6olvamjf8bm-6>li:before{content:"\0025cf  "}ul.lst-kix_9fgmxh8kmqlq-5{list-style-type:none}ul.lst-kix_9fgmxh8kmqlq-2{list-style-type:none}ul.lst-kix_vuvi6sacb86n-1{list-style-type:none}ul.lst-kix_9fgmxh8kmqlq-3{list-style-type:none}ul.lst-kix_vuvi6sacb86n-0{list-style-type:none}ul.lst-kix_9fgmxh8kmqlq-8{list-style-type:none}ul.lst-kix_9fgmxh8kmqlq-6{list-style-type:none}ul.lst-kix_9fgmxh8kmqlq-7{list-style-type:none}.lst-kix_z6olvamjf8bm-8>li:before{content:"\0025a0  "}ul.lst-kix_fduro5j2d8hg-4{list-style-type:none}ul.lst-kix_fduro5j2d8hg-3{list-style-type:none}ul.lst-kix_fduro5j2d8hg-2{list-style-type:none}ul.lst-kix_fduro5j2d8hg-1{list-style-type:none}.lst-kix_m8v894nz1z1y-6>li:before{content:"\0025cf  "}ul.lst-kix_fduro5j2d8hg-0{list-style-type:none}ol.lst-kix_nurbsb4nxavd-3{list-style-type:none}.lst-kix_t8o3of4204bd-8>li:before{content:"\0025a0  "}ol.lst-kix_nurbsb4nxavd-2{list-style-type:none}ol.lst-kix_nurbsb4nxavd-1{list-style-type:none}.lst-kix_t8o3of4204bd-7>li:before{content:"\0025cb  "}ol.lst-kix_nurbsb4nxavd-0{list-style-type:none}.lst-kix_m8v894nz1z1y-2>li:before{content:"\0025a0  "}ol.lst-kix_nurbsb4nxavd-7{list-style-type:none}ol.lst-kix_nurbsb4nxavd-6{list-style-type:none}ol.lst-kix_nurbsb4nxavd-5{list-style-type:none}ol.lst-kix_nurbsb4nxavd-4{list-style-type:none}.lst-kix_m8v894nz1z1y-1>li:before{content:"\0025cb  "}.lst-kix_m8v894nz1z1y-5>li:before{content:"\0025a0  "}.lst-kix_8lzf2aku9ku4-5>li:before{content:"\0025a0  "}ol.lst-kix_nurbsb4nxavd-8{list-style-type:none}.lst-kix_nurbsb4nxavd-6>li{counter-increment:lst-ctn-kix_nurbsb4nxavd-6}ol.lst-kix_j1uh4ob0xbk3-4{list-style-type:none}ul.lst-kix_w6xlf9eamw45-8{list-style-type:none}ol.lst-kix_j1uh4ob0xbk3-5{list-style-type:none}.lst-kix_t8o3of4204bd-0>li:before{content:"\0025cf  "}ol.lst-kix_j1uh4ob0xbk3-2{list-style-type:none}ol.lst-kix_j1uh4ob0xbk3-3{list-style-type:none}ul.lst-kix_w6xlf9eamw45-5{list-style-type:none}ol.lst-kix_j1uh4ob0xbk3-8{list-style-type:none}ul.lst-kix_w6xlf9eamw45-4{list-style-type:none}ul.lst-kix_w6xlf9eamw45-7{list-style-type:none}ol.lst-kix_j1uh4ob0xbk3-6{list-style-type:none}ul.lst-kix_1lheyf7epzh4-8{list-style-type:none}ul.lst-kix_w6xlf9eamw45-6{list-style-type:none}ol.lst-kix_j1uh4ob0xbk3-7{list-style-type:none}.lst-kix_nurbsb4nxavd-4>li{counter-increment:lst-ctn-kix_nurbsb4nxavd-4}.lst-kix_8lzf2aku9ku4-6>li:before{content:"\0025cf  "}.lst-kix_t8o3of4204bd-4>li:before{content:"\0025cb  "}.lst-kix_t8o3of4204bd-3>li:before{content:"\0025cf  "}ul.lst-kix_1lheyf7epzh4-7{list-style-type:none}ul.lst-kix_w6xlf9eamw45-1{list-style-type:none}ol.lst-kix_nurbsb4nxavd-1.start{counter-reset:lst-ctn-kix_nurbsb4nxavd-1 0}ul.lst-kix_1lheyf7epzh4-6{list-style-type:none}ul.lst-kix_w6xlf9eamw45-0{list-style-type:none}ul.lst-kix_1lheyf7epzh4-5{list-style-type:none}ul.lst-kix_w6xlf9eamw45-3{list-style-type:none}ul.lst-kix_1lheyf7epzh4-4{list-style-type:none}ul.lst-kix_w6xlf9eamw45-2{list-style-type:none}ul.lst-kix_1lheyf7epzh4-3{list-style-type:none}ol.lst-kix_j1uh4ob0xbk3-0{list-style-type:none}ul.lst-kix_1lheyf7epzh4-2{list-style-type:none}ol.lst-kix_j1uh4ob0xbk3-1{list-style-type:none}ul.lst-kix_1lheyf7epzh4-1{list-style-type:none}.lst-kix_1lheyf7epzh4-7>li:before{content:"\0025cb  "}ul.lst-kix_1lheyf7epzh4-0{list-style-type:none}.lst-kix_1lheyf7epzh4-8>li:before{content:"\0025a0  "}.lst-kix_j1uh4ob0xbk3-7>li:before{content:"" counter(lst-ctn-kix_j1uh4ob0xbk3-7,lower-latin) ". "}.lst-kix_j1uh4ob0xbk3-6>li:before{content:"" counter(lst-ctn-kix_j1uh4ob0xbk3-6,decimal) ". "}.lst-kix_joxgzbri204-5>li:before{content:"\0025a0  "}.lst-kix_9fgmxh8kmqlq-8>li:before{content:"\0025a0  "}ul.lst-kix_mo774gk87j9d-0{list-style-type:none}.lst-kix_joxgzbri204-8>li:before{content:"\0025a0  "}.lst-kix_j1uh4ob0xbk3-4>li{counter-increment:lst-ctn-kix_j1uh4ob0xbk3-4}ul.lst-kix_mo774gk87j9d-6{list-style-type:none}ul.lst-kix_mo774gk87j9d-5{list-style-type:none}ul.lst-kix_mo774gk87j9d-8{list-style-type:none}ul.lst-kix_mo774gk87j9d-7{list-style-type:none}.lst-kix_9fgmxh8kmqlq-0>li:before{content:"\0025cf  "}.lst-kix_9fgmxh8kmqlq-4>li:before{content:"\0025cb  "}ol.lst-kix_nurbsb4nxavd-2.start{counter-reset:lst-ctn-kix_nurbsb4nxavd-2 0}ul.lst-kix_mo774gk87j9d-2{list-style-type:none}.lst-kix_oidx9jr13yvq-6>li:before{content:"\0025cf  "}ul.lst-kix_mo774gk87j9d-1{list-style-type:none}.lst-kix_hbndxjxq70g2-5>li:before{content:"\0025a0  "}ul.lst-kix_mo774gk87j9d-4{list-style-type:none}ul.lst-kix_mo774gk87j9d-3{list-style-type:none}.lst-kix_hbndxjxq70g2-0>li:before{content:"\0025cf  "}.lst-kix_hbndxjxq70g2-8>li:before{content:"\0025a0  "}.lst-kix_9fgmxh8kmqlq-5>li:before{content:"\0025a0  "}.lst-kix_joxgzbri204-4>li:before{content:"\0025cb  "}.lst-kix_j1uh4ob0xbk3-3>li:before{content:"" counter(lst-ctn-kix_j1uh4ob0xbk3-3,decimal) ". "}.lst-kix_oidx9jr13yvq-1>li:before{content:"\0025cb  "}ul.lst-kix_hbndxjxq70g2-0{list-style-type:none}ul.lst-kix_hbndxjxq70g2-1{list-style-type:none}.lst-kix_j1uh4ob0xbk3-2>li:before{content:"" counter(lst-ctn-kix_j1uh4ob0xbk3-2,lower-roman) ". "}ul.lst-kix_fduro5j2d8hg-8{list-style-type:none}.lst-kix_oidx9jr13yvq-2>li:before{content:"\0025a0  "}ul.lst-kix_fduro5j2d8hg-7{list-style-type:none}.lst-kix_hbndxjxq70g2-1>li:before{content:"\0025cb  "}ul.lst-kix_fduro5j2d8hg-6{list-style-type:none}ul.lst-kix_fduro5j2d8hg-5{list-style-type:none}.lst-kix_joxgzbri204-1>li:before{content:"\0025cb  "}.lst-kix_oidx9jr13yvq-5>li:before{content:"\0025a0  "}.lst-kix_hbndxjxq70g2-4>li:before{content:"\0025cb  "}.lst-kix_5y5k5tod9hw6-0>li{counter-increment:lst-ctn-kix_5y5k5tod9hw6-0}.lst-kix_9fgmxh8kmqlq-1>li:before{content:"\0025cb  "}.lst-kix_joxgzbri204-0>li:before{content:"\0025cf  "}.lst-kix_pa1n5rmoolwo-3>li:before{content:"\0025cf  "}ul.lst-kix_z6olvamjf8bm-7{list-style-type:none}ul.lst-kix_z6olvamjf8bm-8{list-style-type:none}ul.lst-kix_z6olvamjf8bm-5{list-style-type:none}ul.lst-kix_z6olvamjf8bm-6{list-style-type:none}ul.lst-kix_z6olvamjf8bm-3{list-style-type:none}ul.lst-kix_z6olvamjf8bm-4{list-style-type:none}ul.lst-kix_hbndxjxq70g2-6{list-style-type:none}ul.lst-kix_hbndxjxq70g2-7{list-style-type:none}ul.lst-kix_hbndxjxq70g2-8{list-style-type:none}.lst-kix_z6olvamjf8bm-3>li:before{content:"\0025cf  "}ul.lst-kix_hbndxjxq70g2-2{list-style-type:none}ul.lst-kix_hbndxjxq70g2-3{list-style-type:none}ul.lst-kix_hbndxjxq70g2-4{list-style-type:none}ul.lst-kix_hbndxjxq70g2-5{list-style-type:none}.lst-kix_szyq47ftc9sq-1>li:before{content:"\0025cb  "}.lst-kix_uyls82go2c77-0>li:before{content:"\0025cf  "}.lst-kix_n3uvi8rndpi-8>li:before{content:"\0025a0  "}.lst-kix_uyls82go2c77-8>li:before{content:"\0025a0  "}.lst-kix_tm398gvkdxtj-2>li:before{content:"\0025a0  "}ul.lst-kix_z6olvamjf8bm-1{list-style-type:none}ul.lst-kix_z6olvamjf8bm-2{list-style-type:none}ul.lst-kix_z6olvamjf8bm-0{list-style-type:none}.lst-kix_uyls82go2c77-4>li:before{content:"\0025cb  "}.lst-kix_szyq47ftc9sq-5>li:before{content:"\0025a0  "}ul.lst-kix_pa1n5rmoolwo-7{list-style-type:none}ul.lst-kix_pa1n5rmoolwo-8{list-style-type:none}.lst-kix_1lheyf7epzh4-4>li:before{content:"\0025cb  "}ul.lst-kix_pa1n5rmoolwo-0{list-style-type:none}ul.lst-kix_pa1n5rmoolwo-1{list-style-type:none}ul.lst-kix_pa1n5rmoolwo-2{list-style-type:none}ul.lst-kix_pa1n5rmoolwo-3{list-style-type:none}ul.lst-kix_pa1n5rmoolwo-4{list-style-type:none}ul.lst-kix_pa1n5rmoolwo-5{list-style-type:none}ul.lst-kix_pa1n5rmoolwo-6{list-style-type:none}.lst-kix_1lheyf7epzh4-0>li:before{content:"\0025cf  "}.lst-kix_5y5k5tod9hw6-5>li{counter-increment:lst-ctn-kix_5y5k5tod9hw6-5}ol.lst-kix_nurbsb4nxavd-0.start{counter-reset:lst-ctn-kix_nurbsb4nxavd-0 0}.lst-kix_8lzf2aku9ku4-2>li:before{content:"\0025a0  "}.lst-kix_fduro5j2d8hg-1>li:before{content:"\0025cb  "}.lst-kix_z6olvamjf8bm-7>li:before{content:"\0025cb  "}.lst-kix_j1uh4ob0xbk3-6>li{counter-increment:lst-ctn-kix_j1uh4ob0xbk3-6}.lst-kix_pa1n5rmoolwo-7>li:before{content:"\0025cb  "}.lst-kix_fduro5j2d8hg-5>li:before{content:"\0025a0  "}.lst-kix_mo774gk87j9d-0>li:before{content:"\0025cf  "}.lst-kix_k6h1p9zcggp9-8>li:before{content:"\0025a0  "}.lst-kix_vuvi6sacb86n-8>li:before{content:"\0025a0  "}.lst-kix_mo774gk87j9d-1>li:before{content:"\0025cb  "}.lst-kix_mo774gk87j9d-2>li:before{content:"\0025a0  "}.lst-kix_k6h1p9zcggp9-6>li:before{content:"\0025cf  "}.lst-kix_k6h1p9zcggp9-7>li:before{content:"\0025cb  "}.lst-kix_vuvi6sacb86n-7>li:before{content:"\0025cb  "}.lst-kix_mo774gk87j9d-3>li:before{content:"\0025cf  "}.lst-kix_mo774gk87j9d-4>li:before{content:"\0025cb  "}.lst-kix_k6h1p9zcggp9-0>li:before{content:"\0025cf  "}.lst-kix_vuvi6sacb86n-2>li:before{content:"\0025a0  "}.lst-kix_vuvi6sacb86n-3>li:before{content:"\0025cf  "}.lst-kix_vuvi6sacb86n-4>li:before{content:"\0025cb  "}.lst-kix_vuvi6sacb86n-6>li:before{content:"\0025cf  "}.lst-kix_vuvi6sacb86n-5>li:before{content:"\0025a0  "}ol.lst-kix_nurbsb4nxavd-4.start{counter-reset:lst-ctn-kix_nurbsb4nxavd-4 0}ul.lst-kix_tm398gvkdxtj-2{list-style-type:none}ul.lst-kix_tm398gvkdxtj-3{list-style-type:none}ul.lst-kix_tm398gvkdxtj-0{list-style-type:none}ul.lst-kix_tm398gvkdxtj-1{list-style-type:none}ol.lst-kix_j1uh4ob0xbk3-5.start{counter-reset:lst-ctn-kix_j1uh4ob0xbk3-5 0}ul.lst-kix_tm398gvkdxtj-8{list-style-type:none}ul.lst-kix_tm398gvkdxtj-6{list-style-type:none}ul.lst-kix_tm398gvkdxtj-7{list-style-type:none}ul.lst-kix_tm398gvkdxtj-4{list-style-type:none}ul.lst-kix_tm398gvkdxtj-5{list-style-type:none}.lst-kix_n3uvi8rndpi-4>li:before{content:"\0025cb  "}.lst-kix_5y5k5tod9hw6-3>li{counter-increment:lst-ctn-kix_5y5k5tod9hw6-3}.lst-kix_n3uvi8rndpi-1>li:before{content:"\0025cb  "}.lst-kix_n3uvi8rndpi-5>li:before{content:"\0025a0  "}.lst-kix_n3uvi8rndpi-2>li:before{content:"\0025a0  "}.lst-kix_n3uvi8rndpi-3>li:before{content:"\0025cf  "}.lst-kix_vuvi6sacb86n-1>li:before{content:"\0025cb  "}.lst-kix_mo774gk87j9d-7>li:before{content:"\0025cb  "}.lst-kix_mo774gk87j9d-8>li:before{content:"\0025a0  "}.lst-kix_k6h1p9zcggp9-1>li:before{content:"\0025cb  "}.lst-kix_vuvi6sacb86n-0>li:before{content:"\0025cf  "}ol.lst-kix_5y5k5tod9hw6-3.start{counter-reset:lst-ctn-kix_5y5k5tod9hw6-3 0}.lst-kix_mo774gk87j9d-5>li:before{content:"\0025a0  "}.lst-kix_mo774gk87j9d-6>li:before{content:"\0025cf  "}.lst-kix_k6h1p9zcggp9-2>li:before{content:"\0025a0  "}.lst-kix_k6h1p9zcggp9-3>li:before{content:"\0025cf  "}.lst-kix_n3uvi8rndpi-0>li:before{content:"\0025cf  "}.lst-kix_k6h1p9zcggp9-4>li:before{content:"\0025cb  "}.lst-kix_k6h1p9zcggp9-5>li:before{content:"\0025a0  "}ul.lst-kix_8lzf2aku9ku4-5{list-style-type:none}ul.lst-kix_8lzf2aku9ku4-6{list-style-type:none}ul.lst-kix_8lzf2aku9ku4-3{list-style-type:none}ul.lst-kix_8lzf2aku9ku4-4{list-style-type:none}.lst-kix_szyq47ftc9sq-0>li:before{content:"\0025cf  "}.lst-kix_5y5k5tod9hw6-7>li{counter-increment:lst-ctn-kix_5y5k5tod9hw6-7}ul.lst-kix_8lzf2aku9ku4-1{list-style-type:none}ul.lst-kix_8lzf2aku9ku4-2{list-style-type:none}.lst-kix_pa1n5rmoolwo-2>li:before{content:"\0025a0  "}ul.lst-kix_8lzf2aku9ku4-0{list-style-type:none}.lst-kix_pa1n5rmoolwo-6>li:before{content:"\0025cf  "}.lst-kix_szyq47ftc9sq-2>li:before{content:"\0025a0  "}.lst-kix_pa1n5rmoolwo-4>li:before{content:"\0025cb  "}.lst-kix_n3uvi8rndpi-7>li:before{content:"\0025cb  "}ul.lst-kix_8lzf2aku9ku4-7{list-style-type:none}.lst-kix_pa1n5rmoolwo-0>li:before{content:"\0025cf  "}ul.lst-kix_8lzf2aku9ku4-8{list-style-type:none}ul.lst-kix_m8v894nz1z1y-4{list-style-type:none}ul.lst-kix_twwh50f77grw-3{list-style-type:none}ul.lst-kix_m8v894nz1z1y-5{list-style-type:none}ul.lst-kix_twwh50f77grw-2{list-style-type:none}ul.lst-kix_m8v894nz1z1y-6{list-style-type:none}ul.lst-kix_twwh50f77grw-1{list-style-type:none}ul.lst-kix_m8v894nz1z1y-7{list-style-type:none}ul.lst-kix_twwh50f77grw-0{list-style-type:none}ul.lst-kix_m8v894nz1z1y-8{list-style-type:none}.lst-kix_uyls82go2c77-7>li:before{content:"\0025cb  "}ul.lst-kix_twwh50f77grw-8{list-style-type:none}ul.lst-kix_m8v894nz1z1y-0{list-style-type:none}ul.lst-kix_twwh50f77grw-7{list-style-type:none}ul.lst-kix_m8v894nz1z1y-1{list-style-type:none}ul.lst-kix_twwh50f77grw-6{list-style-type:none}ul.lst-kix_m8v894nz1z1y-2{list-style-type:none}ul.lst-kix_twwh50f77grw-5{list-style-type:none}ul.lst-kix_m8v894nz1z1y-3{list-style-type:none}ul.lst-kix_twwh50f77grw-4{list-style-type:none}.lst-kix_uyls82go2c77-1>li:before{content:"\0025cb  "}.lst-kix_szyq47ftc9sq-6>li:before{content:"\0025cf  "}.lst-kix_szyq47ftc9sq-8>li:before{content:"\0025a0  "}.lst-kix_uyls82go2c77-3>li:before{content:"\0025cf  "}.lst-kix_nurbsb4nxavd-1>li{counter-increment:lst-ctn-kix_nurbsb4nxavd-1}.lst-kix_szyq47ftc9sq-4>li:before{content:"\0025cb  "}.lst-kix_uyls82go2c77-5>li:before{content:"\0025a0  "}ol.lst-kix_5y5k5tod9hw6-0.start{counter-reset:lst-ctn-kix_5y5k5tod9hw6-0 0}ul.lst-kix_uyls82go2c77-0{list-style-type:none}ul.lst-kix_uyls82go2c77-1{list-style-type:none}ul.lst-kix_uyls82go2c77-2{list-style-type:none}.lst-kix_fduro5j2d8hg-0>li:before{content:"\0025cf  "}ol.lst-kix_j1uh4ob0xbk3-8.start{counter-reset:lst-ctn-kix_j1uh4ob0xbk3-8 0}.lst-kix_fduro5j2d8hg-6>li:before{content:"\0025cf  "}.lst-kix_fduro5j2d8hg-8>li:before{content:"\0025a0  "}.lst-kix_j1uh4ob0xbk3-3>li{counter-increment:lst-ctn-kix_j1uh4ob0xbk3-3}.lst-kix_fduro5j2d8hg-2>li:before{content:"\0025a0  "}.lst-kix_nurbsb4nxavd-2>li{counter-increment:lst-ctn-kix_nurbsb4nxavd-2}.lst-kix_nurbsb4nxavd-8>li{counter-increment:lst-ctn-kix_nurbsb4nxavd-8}ol.lst-kix_nurbsb4nxavd-6.start{counter-reset:lst-ctn-kix_nurbsb4nxavd-6 0}.lst-kix_fduro5j2d8hg-4>li:before{content:"\0025cb  "}.lst-kix_pa1n5rmoolwo-8>li:before{content:"\0025a0  "}.lst-kix_m8v894nz1z1y-8>li:before{content:"\0025a0  "}.lst-kix_m8v894nz1z1y-7>li:before{content:"\0025cb  "}ul.lst-kix_oidx9jr13yvq-1{list-style-type:none}ul.lst-kix_oidx9jr13yvq-0{list-style-type:none}.lst-kix_5y5k5tod9hw6-2>li{counter-increment:lst-ctn-kix_5y5k5tod9hw6-2}.lst-kix_m8v894nz1z1y-4>li:before{content:"\0025cb  "}.lst-kix_t8o3of4204bd-5>li:before{content:"\0025a0  "}.lst-kix_t8o3of4204bd-6>li:before{content:"\0025cf  "}.lst-kix_8lzf2aku9ku4-3>li:before{content:"\0025cf  "}.lst-kix_8lzf2aku9ku4-4>li:before{content:"\0025cb  "}.lst-kix_m8v894nz1z1y-3>li:before{content:"\0025cf  "}.lst-kix_t8o3of4204bd-1>li:before{content:"\0025cb  "}ol.lst-kix_j1uh4ob0xbk3-7.start{counter-reset:lst-ctn-kix_j1uh4ob0xbk3-7 0}ol.lst-kix_nurbsb4nxavd-7.start{counter-reset:lst-ctn-kix_nurbsb4nxavd-7 0}.lst-kix_8lzf2aku9ku4-7>li:before{content:"\0025cb  "}.lst-kix_8lzf2aku9ku4-8>li:before{content:"\0025a0  "}.lst-kix_t8o3of4204bd-2>li:before{content:"\0025a0  "}ul.lst-kix_uyls82go2c77-7{list-style-type:none}ul.lst-kix_uyls82go2c77-8{list-style-type:none}ul.lst-kix_uyls82go2c77-3{list-style-type:none}ul.lst-kix_uyls82go2c77-4{list-style-type:none}ul.lst-kix_uyls82go2c77-5{list-style-type:none}.lst-kix_j1uh4ob0xbk3-2>li{counter-increment:lst-ctn-kix_j1uh4ob0xbk3-2}ul.lst-kix_uyls82go2c77-6{list-style-type:none}ol.lst-kix_5y5k5tod9hw6-1.start{counter-reset:lst-ctn-kix_5y5k5tod9hw6-1 0}.lst-kix_j1uh4ob0xbk3-8>li:before{content:"" counter(lst-ctn-kix_j1uh4ob0xbk3-8,lower-roman) ". "}.lst-kix_oidx9jr13yvq-0>li:before{content:"\0025cf  "}ul.lst-kix_n3uvi8rndpi-7{list-style-type:none}ul.lst-kix_n3uvi8rndpi-8{list-style-type:none}.lst-kix_9fgmxh8kmqlq-7>li:before{content:"\0025cb  "}.lst-kix_joxgzbri204-6>li:before{content:"\0025cf  "}ul.lst-kix_n3uvi8rndpi-5{list-style-type:none}ul.lst-kix_n3uvi8rndpi-6{list-style-type:none}ul.lst-kix_n3uvi8rndpi-3{list-style-type:none}ul.lst-kix_n3uvi8rndpi-4{list-style-type:none}ul.lst-kix_n3uvi8rndpi-1{list-style-type:none}ul.lst-kix_n3uvi8rndpi-2{list-style-type:none}.lst-kix_joxgzbri204-7>li:before{content:"\0025cb  "}ul.lst-kix_n3uvi8rndpi-0{list-style-type:none}.lst-kix_hbndxjxq70g2-6>li:before{content:"\0025cf  "}.lst-kix_9fgmxh8kmqlq-2>li:before{content:"\0025a0  "}.lst-kix_oidx9jr13yvq-8>li:before{content:"\0025a0  "}.lst-kix_oidx9jr13yvq-7>li:before{content:"\0025cb  "}.lst-kix_9fgmxh8kmqlq-3>li:before{content:"\0025cf  "}.lst-kix_9fgmxh8kmqlq-6>li:before{content:"\0025cf  "}.lst-kix_5y5k5tod9hw6-6>li{counter-increment:lst-ctn-kix_5y5k5tod9hw6-6}.lst-kix_j1uh4ob0xbk3-0>li:before{content:"" counter(lst-ctn-kix_j1uh4ob0xbk3-0,decimal) ". "}.lst-kix_joxgzbri204-3>li:before{content:"\0025cf  "}.lst-kix_hbndxjxq70g2-7>li:before{content:"\0025cb  "}.lst-kix_j1uh4ob0xbk3-4>li:before{content:"" counter(lst-ctn-kix_j1uh4ob0xbk3-4,lower-latin) ". "}.lst-kix_j1uh4ob0xbk3-5>li:before{content:"" counter(lst-ctn-kix_j1uh4ob0xbk3-5,lower-roman) ". "}.lst-kix_oidx9jr13yvq-3>li:before{content:"\0025cf  "}.lst-kix_joxgzbri204-2>li:before{content:"\0025a0  "}.lst-kix_j1uh4ob0xbk3-1>li:before{content:"" counter(lst-ctn-kix_j1uh4ob0xbk3-1,lower-latin) ". "}.lst-kix_hbndxjxq70g2-2>li:before{content:"\0025a0  "}.lst-kix_oidx9jr13yvq-4>li:before{content:"\0025cb  "}.lst-kix_hbndxjxq70g2-3>li:before{content:"\0025cf  "}.lst-kix_nurbsb4nxavd-0>li{counter-increment:lst-ctn-kix_nurbsb4nxavd-0}.lst-kix_j1uh4ob0xbk3-7>li{counter-increment:lst-ctn-kix_j1uh4ob0xbk3-7}ol.lst-kix_5y5k5tod9hw6-5.start{counter-reset:lst-ctn-kix_5y5k5tod9hw6-5 0}.lst-kix_pa1n5rmoolwo-5>li:before{content:"\0025a0  "}ul.lst-kix_k6h1p9zcggp9-1{list-style-type:none}ul.lst-kix_k6h1p9zcggp9-0{list-style-type:none}ul.lst-kix_k6h1p9zcggp9-3{list-style-type:none}ul.lst-kix_k6h1p9zcggp9-2{list-style-type:none}ul.lst-kix_k6h1p9zcggp9-5{list-style-type:none}ul.lst-kix_k6h1p9zcggp9-4{list-style-type:none}ol.lst-kix_j1uh4ob0xbk3-3.start{counter-reset:lst-ctn-kix_j1uh4ob0xbk3-3 0}ul.lst-kix_k6h1p9zcggp9-7{list-style-type:none}ul.lst-kix_k6h1p9zcggp9-6{list-style-type:none}ul.lst-kix_k6h1p9zcggp9-8{list-style-type:none}.lst-kix_z6olvamjf8bm-1>li:before{content:"\0025cb  "}.lst-kix_n3uvi8rndpi-6>li:before{content:"\0025cf  "}.lst-kix_pa1n5rmoolwo-1>li:before{content:"\0025cb  "}ol.lst-kix_j1uh4ob0xbk3-0.start{counter-reset:lst-ctn-kix_j1uh4ob0xbk3-0 0}ul.lst-kix_joxgzbri204-6{list-style-type:none}.lst-kix_j1uh4ob0xbk3-5>li{counter-increment:lst-ctn-kix_j1uh4ob0xbk3-5}ul.lst-kix_joxgzbri204-7{list-style-type:none}ul.lst-kix_joxgzbri204-8{list-style-type:none}ol.lst-kix_5y5k5tod9hw6-8.start{counter-reset:lst-ctn-kix_5y5k5tod9hw6-8 0}ul.lst-kix_joxgzbri204-2{list-style-type:none}.lst-kix_tm398gvkdxtj-0>li:before{content:"\0025cf  "}ul.lst-kix_joxgzbri204-3{list-style-type:none}ul.lst-kix_joxgzbri204-4{list-style-type:none}ul.lst-kix_joxgzbri204-5{list-style-type:none}.lst-kix_uyls82go2c77-2>li:before{content:"\0025a0  "}ul.lst-kix_joxgzbri204-0{list-style-type:none}ul.lst-kix_joxgzbri204-1{list-style-type:none}.lst-kix_szyq47ftc9sq-3>li:before{content:"\0025cf  "}.lst-kix_szyq47ftc9sq-7>li:before{content:"\0025cb  "}.lst-kix_uyls82go2c77-6>li:before{content:"\0025cf  "}.lst-kix_1lheyf7epzh4-6>li:before{content:"\0025cf  "}ol.lst-kix_j1uh4ob0xbk3-1.start{counter-reset:lst-ctn-kix_j1uh4ob0xbk3-1 0}ol.lst-kix_5y5k5tod9hw6-7.start{counter-reset:lst-ctn-kix_5y5k5tod9hw6-7 0}.lst-kix_5y5k5tod9hw6-4>li{counter-increment:lst-ctn-kix_5y5k5tod9hw6-4}.lst-kix_1lheyf7epzh4-2>li:before{content:"\0025a0  "}.lst-kix_5y5k5tod9hw6-8>li:before{content:"" counter(lst-ctn-kix_5y5k5tod9hw6-8,lower-roman) ". "}.lst-kix_fduro5j2d8hg-7>li:before{content:"\0025cb  "}.lst-kix_w6xlf9eamw45-1>li:before{content:"\0025cb  "}.lst-kix_fduro5j2d8hg-3>li:before{content:"\0025cf  "}.lst-kix_m8v894nz1z1y-0>li:before{content:"\0025cf  "}.lst-kix_8lzf2aku9ku4-0>li:before{content:"\0025cf  "}.lst-kix_j1uh4ob0xbk3-0>li{counter-increment:lst-ctn-kix_j1uh4ob0xbk3-0}ol.lst-kix_j1uh4ob0xbk3-2.start{counter-reset:lst-ctn-kix_j1uh4ob0xbk3-2 0}.lst-kix_z6olvamjf8bm-5>li:before{content:"\0025a0  "}.lst-kix_nurbsb4nxavd-5>li{counter-increment:lst-ctn-kix_nurbsb4nxavd-5}ol.lst-kix_5y5k5tod9hw6-6.start{counter-reset:lst-ctn-kix_5y5k5tod9hw6-6 0}ol{margin:0;padding:0}table td,table th{padding:0}.c3{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10pt;font-family:"Consolas";font-style:normal}.c0{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:"Arial";font-style:normal}.c7{color:#38761d;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10pt;font-family:"Consolas";font-style:normal}.c5{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:"Consolas";font-style:normal}.c16{color:#000000;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:"Arial";font-style:normal}.c14{padding-top:0pt;padding-bottom:0pt;line-height:1.2545454545454544;orphans:2;widows:2;text-align:center}.c26{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:"Times New Roman"}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c11{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:center}.c20{color:#000000;text-decoration:none;vertical-align:baseline;font-size:18pt;font-family:"Times New Roman";font-style:normal}.c24{color:#800000;text-decoration:none;vertical-align:baseline;font-size:18pt;font-family:"Arial"}.c31{padding-top:14pt;padding-bottom:4pt;line-height:1.15;text-align:left}.c27{padding-top:18pt;padding-bottom:4pt;line-height:1.15;text-align:center}.c29{color:#38761d;text-decoration:none;vertical-align:baseline;font-family:"Arial"}.c19{padding-top:0pt;padding-bottom:4pt;line-height:1.15;text-align:center}.c22{color:#000000;text-decoration:none;vertical-align:baseline;font-family:"Arial"}.c10{font-size:10pt;font-family:"Consolas";font-weight:400}.c28{background-color:#ffffff;max-width:648pt;padding:72pt 72pt 72pt 72pt}.c8{margin-left:72pt;padding-left:0pt}.c2{padding:0;margin:0}.c12{font-size:12pt;font-weight:700}.c17{color:#800080;text-decoration:underline}.c6{margin-left:36pt;padding-left:0pt}.c15{color:#1155cc;text-decoration:underline}.c9{color:inherit;text-decoration:inherit}.c21{font-style:italic}.c23{font-style:normal}.c4{height:11pt}.c18{color:#ff0000}.c25{text-indent:36pt}.c30{font-size:13.5pt}.c13{font-weight:700}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:"Arial"}p{margin:0;color:#000000;font-size:11pt;font-family:"Arial"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class="c28"><h2 class="c19" id="h.8mqe3rca4rin"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 216.00px; height: 107.56px;"><img alt="Description: http://www.cs.sunysb.edu/~cse214/images/logo.gif" src="./hw7_files/logo.gif" style="width: 216.00px; height: 107.56px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c13 c20">&nbsp; </span></h2><h2 class="c27" id="h.4c4hrseutpvq"><span class="c23 c13 c24">HOMEWORK - SPRING 2017</span></h2><hr><p class="c4 c14"><span class="c23 c26"></span></p><h3 class="c31" id="h.4zo2vkqwgpb5"><span class="c22 c23 c13 c30">HOMEWORK 7 - due Tuesday, May 2nd no later than 6:00pm</span></h3><p class="c1"><span class="c16 c13">REMINDERS:</span></p><ul class="c2 lst-kix_mo774gk87j9d-0 start"><li class="c1 c6"><span class="c12">Be sure your code follows the </span><span class="c12 c17"><a class="c9" href="https://www.google.com/url?q=http://www.cs.sunysb.edu/~cse214/codingstyle.htm&amp;sa=D&amp;ust=1492586920125000&amp;usg=AFQjCNFUOMiy-Eg3r2dAT5608VUH1R-5Hg">coding style</a></span><span class="c22 c12 c23">&nbsp;for CSE214.</span></li><li class="c1 c6"><span class="c12">Make sure you read the warnings about </span><span class="c12 c17"><a class="c9" href="https://www.google.com/url?q=http://www.cs.sunysb.edu/~cse214/courseinfo.htm&amp;sa=D&amp;ust=1492586920127000&amp;usg=AFQjCNFbKPX8_hGd3p0EBq5xl7PyTJcDxQ">academic dishonesty</a></span><span class="c12">. </span><span class="c12 c21 c22">Remember, all work you submit for homework assignments MUST be entirely your own work. Also, group efforts are not allowed.</span></li><li class="c1 c6"><span class="c12">Login to your </span><span class="c12 c17"><a class="c9" href="https://www.google.com/url?q=http://facdev02.cs.stonybrook.edu:8080/grade.Login&amp;sa=D&amp;ust=1492586920128000&amp;usg=AFQjCNHz7PWCeiiqnDjGoZukI-JsIPlrZQ">grading account</a></span><span class="c22 c12 c23">&nbsp;and click "Submit Assignment" to upload and submit your assignment.</span></li><li class="c1 c6"><span class="c12 c23 c29">You are allowed to use any built-in Java API Data Structure classes to implement this assignment except where noted.</span></li><li class="c1 c6"><span class="c22 c12 c23">You may use Scanner, InputStreamReader, or any other class that you wish for keyboard input.</span></li></ul><p class="c1 c4"><span class="c22 c12 c23"></span></p><p class="c1 c4"><span class="c0"></span></p><hr><p class="c1 c4"><span class="c0"></span></p><p class="c1"><span>In this homework, you will be exploring shortest path finding algorithms. These algorithms are used by companies like Google, UPS, FedEx, and even by the internet to find the shortest route between two points (whether it be routers in a network, or roads on a road network). We will be looking at a much more entertaining version of this algorithm: </span><span class="c15"><a class="c9" href="https://www.google.com/url?q=https://en.wikipedia.org/wiki/Kevin_Bacon&amp;sa=D&amp;ust=1492586920132000&amp;usg=AFQjCNFQZyNjWPThhw15QonYH3QFnMlQGw">Six degrees of Kevin Bacon</a></span><span class="c0">. The basic premise of Six degrees of Kevin Bacon is to find the fastest way to relate an actor in a movie to another actor in another movie. For Example, if Prof. Fodor and Prof. Esmaili starred together in "CSE 114: The Movie", Prof. Esmaili co-starred with Prof. McDonnell in "Logic: a CSE 215 Chronicle" and Prof. McDonnell collaborated with Prof. Wong on "The Architect: Assembling CSE 220", the Kevin Bacon distance between Prof. Esmaili and Prof. Wong is two, for Prof. Fodor and Prof. Wong, it's 3. The distance between two actors in the same film is 1. </span></p><p class="c1 c4"><span class="c0"></span></p><p class="c1"><span>We will be modelling actors in movies as a graph, where each actor is a node, and they have edges to actors they share movies with. You will be tasked with finding the shortest path between two actor nodes. There are a variety of algorithms to do this (like Djikstra's and Floyd Warshall), but for a simple unweighted undirected graph, you can just use a </span><span class="c15"><a class="c9" href="https://www.google.com/url?q=https://en.wikipedia.org/wiki/Breadth-first_search&amp;sa=D&amp;ust=1492586920134000&amp;usg=AFQjCNFW9RK4ghKSdGJvgAfBoRdMzgLrzw">Breadth First Search</a></span><span class="c0">.</span></p><p class="c1 c4"><span class="c0"></span></p><p class="c1"><span>In order to construct our graph of connected actors, we will be using the </span><span class="c15"><a class="c9" href="https://www.google.com/url?q=http://www.omdbapi.com/&amp;sa=D&amp;ust=1492586920136000&amp;usg=AFQjCNH0kyDD9OefqQ-tziwkmklEyOUAuQ">Open Movie Database API</a></span><span>, which provides an easy way to get the main actors in various films. In order to access this api, we will be using </span><span class="c15"><a class="c9" href="https://www.google.com/url?q=https://github.com/berry-cs/big-data-cse&amp;sa=D&amp;ust=1492586920137000&amp;usg=AFQjCNH43BLLq3T9A8A0PbqwIRgwl-7wqA">Big Data</a></span><span>, an open source data parser that supports XML and CSV files. You must </span><span class="c15"><a class="c9" href="https://www.google.com/url?q=http://stackoverflow.com/questions/3280353/how-to-import-a-jar-in-eclipse&amp;sa=D&amp;ust=1492586920137000&amp;usg=AFQjCNGzkKc1KivL0viifmoghzTy-C4D9g">add</a></span><span class="c0">&nbsp;the external bigdata.jar to your IDE, and, in order to make your life easier, we have provided a sample program that interfaces BigData with omdbapi.</span></p><p class="c1 c4"><span class="c0"></span></p><p class="c1"><span>Finally, as in HW6, we will be keeping track of all the movies that we're importing, and all the actors they contain, however, this time, you must produce an alphabetized list of all of the movies and actors. This requires sorting, but don't worry, the Java API </span><span class="c15"><a class="c9" href="https://www.google.com/url?q=https://www.mkyong.com/java/java-object-sorting-example-comparable-and-comparator/&amp;sa=D&amp;ust=1492586920139000&amp;usg=AFQjCNHbZQRa0G1ywaEo_DcBKtjo5bYfcw">has you covered</a></span><span class="c0">. </span></p><hr><p class="c1 c4"><span class="c0"></span></p><p class="c11"><span class="c13">Required Classes</span></p><p class="c1"><span class="c0">The following sections describe classes which are required for this assignment. Each section provides a description and the specifications necessary to complete each class. If you feel that additional methods would be useful, feel free to add them during your implementation as you see fit. However, all the variables and methods in the following specifications must be included in your project.</span></p><p class="c1 c4"><span class="c0"></span></p><p class="c1"><span class="c13">Actor</span></p><p class="c1"><span class="c0">Write a fully-documented class named Actor. This class will represent an Actor in the graph. You will get the information about each Actor through the Open Movie Database. Each Actor must include:</span></p><ul class="c2 lst-kix_n3uvi8rndpi-0 start"><li class="c1 c6"><span>p</span><span class="c0">rivate String name</span></li></ul><ul class="c2 lst-kix_n3uvi8rndpi-1 start"><li class="c1 c8"><span class="c0">The name of the Actor.</span></li></ul><ul class="c2 lst-kix_n3uvi8rndpi-0"><li class="c1 c6"><span>p</span><span class="c0">rivate Movie[] movies</span></li></ul><ul class="c2 lst-kix_n3uvi8rndpi-1 start"><li class="c1 c8"><span class="c0">List of movies that the Actor is or has been in.</span></li><li class="c1 c8"><span class="c13">OPTIONAL:</span><span class="c0">&nbsp;You may use List&lt;Movie&gt; as the data type, whichever is easier.</span></li></ul><ul class="c2 lst-kix_n3uvi8rndpi-0"><li class="c1 c6"><span>p</span><span class="c0">rivate Actor[] friends </span></li></ul><ul class="c2 lst-kix_n3uvi8rndpi-1 start"><li class="c1 c8"><span class="c0">List of Actors that share movies with the current Actor.</span></li><li class="c1 c8"><span class="c13">OPTIONAL:</span><span class="c0">&nbsp;You may use List&lt;Actor&gt; as the data type, whichever is easier.</span></li></ul><ul class="c2 lst-kix_n3uvi8rndpi-0"><li class="c1 c6"><span>p</span><span class="c0">rivate boolean visited</span></li></ul><ul class="c2 lst-kix_n3uvi8rndpi-1 start"><li class="c1 c8"><span class="c0">Whether or not the Actor has been visited in the traversal. This variable along with the path variable should only be modified when finding shortest path and the breadth first traversal.</span></li></ul><ul class="c2 lst-kix_n3uvi8rndpi-0"><li class="c1 c6"><span>p</span><span class="c0">rivate LinkedList&lt;String&gt; path</span></li></ul><ul class="c2 lst-kix_n3uvi8rndpi-1 start"><li class="c1 c8"><span class="c0">The current path up to the current Actor in the given traversal. </span></li><li class="c1 c8"><span class="c18">Note:</span><span class="c0">&nbsp;This variable’s value will be different depending on where the traversal started from. </span></li></ul><ul class="c2 lst-kix_n3uvi8rndpi-0"><li class="c1 c6"><span class="c0">Accessor and mutator methods for the above member variables.</span></li></ul><p class="c1 c4"><span class="c0"></span></p><p class="c1"><span class="c13">Movie</span></p><p class="c1"><span class="c0">Write a fully-documented class named Movie. This class will represent a Movie that an Actor could be in. You will also get the information about each Movie through the Open Movie Database. Each Movie must include:</span></p><ul class="c2 lst-kix_tm398gvkdxtj-0 start"><li class="c1 c6"><span>p</span><span class="c0">rivate String title</span></li></ul><ul class="c2 lst-kix_tm398gvkdxtj-1 start"><li class="c1 c8"><span class="c0">The title of the Movie.</span></li></ul><ul class="c2 lst-kix_tm398gvkdxtj-0"><li class="c1 c6"><span>p</span><span class="c0">rivate Actor[] actors</span></li></ul><ul class="c2 lst-kix_tm398gvkdxtj-1 start"><li class="c1 c8"><span class="c0">List of Actors that are in the current Movie.</span></li><li class="c1 c8"><span class="c13">OPTIONAL:</span><span class="c0">&nbsp;You may use List&lt;Actor&gt; as the data type, whichever is easier.</span></li></ul><ul class="c2 lst-kix_tm398gvkdxtj-0"><li class="c1 c6"><span>p</span><span class="c0">rivate int year</span></li></ul><ul class="c2 lst-kix_tm398gvkdxtj-1 start"><li class="c1 c8"><span class="c0">Year the movie was created.</span></li></ul><ul class="c2 lst-kix_tm398gvkdxtj-0"><li class="c1 c6"><span class="c0">Accessor and mutator methods for the above member variables.</span></li><li class="c1 c6"><span>p</span><span class="c0">ublic Movie(String title)</span></li></ul><ul class="c2 lst-kix_tm398gvkdxtj-1 start"><li class="c1 c8"><span class="c0">Loads (using BigData) a movie using the passed title to create the URL and makes a new Movie object from it. </span></li></ul><p class="c1 c4"><span class="c0"></span></p><p class="c1"><span class="c13 c16">Comparator classes</span></p><p class="c1"><span class="c0">This assignment requires Actor and Movie instances to be sorted by two member variables: name and title. Actors should be sorted by name and Movies should be sorted by title. To accomplish this, you should create two different classes which implement the Comparator interface which allow the Actor and Movie instances to be arranged in sorted order based on the value of these member variables.</span></p><p class="c1 c4"><span class="c0"></span></p><ol class="c2 lst-kix_j1uh4ob0xbk3-0 start" start="1"><li class="c1 c6"><span class="c0">NameComparator</span></li><li class="c1 c6"><span class="c0">TitleComparator</span></li></ol><p class="c1 c4"><span class="c0"></span></p><p class="c1"><span class="c0">Each of these classes should implement either:</span></p><p class="c1"><span>i</span><span class="c0">nt compare(Movie left, Movie right)</span></p><p class="c1"><span>o</span><span class="c0">r</span></p><p class="c1"><span>i</span><span class="c0">nt compare(Actor left, Actor right)</span></p><p class="c1"><span>m</span><span class="c0">ethod. Each method in these classes should compare the two arguments based on the value of the desired member variable. For example, NameComparator would compare the two Actor objects based on the values of their name member variables.</span></p><p class="c1 c4"><span class="c0"></span></p><p class="c1"><span class="c13">ActorGraph</span></p><p class="c1"><span class="c0">Write a fully-documented class named Movie. This class will model the graph of Actors. The graph will be structured with nodes being represented as Actors and edges between Actors being represented as whether or not those Actors share a Movie. You will be asked to find the shortest path between two Actors. The ActorGraph should contain:</span></p><ul class="c2 lst-kix_joxgzbri204-0 start"><li class="c1 c6"><span>private</span><span class="c0">&nbsp;static HashMap&lt;String, Actor&gt; actorsByName</span></li></ul><ul class="c2 lst-kix_k6h1p9zcggp9-0 start"><li class="c1 c6"><span>p</span><span class="c0">rivate static HashMap&lt;String, Movie&gt; moviesByTitle</span></li><li class="c1 c6"><span>p</span><span class="c0">ublic static LinkedList&lt;String&gt; bfs(String name)</span></li></ul><ul class="c2 lst-kix_k6h1p9zcggp9-1 start"><li class="c1 c8"><span class="c0">Returns the breadth first traversal starting with the Actor with the passed in name.</span></li><li class="c1 c8"><span class="c18">Note:</span><span class="c0">&nbsp;This method should also set the path variable of the Actors passed in the breadth first traversal with the current path up to that Actor. </span></li></ul><p class="c1 c4"><span class="c0"></span></p><p class="c1"><span class="c13">KBCalculator</span></p><p class="c1"><span class="c0">Write a fully-documented class named KBCalculator which allows a user to view datasets obtained from the OMDB API. This class should contain a main method which creates an ActionGraph and prompts the user to import Movies, display all the current Movies in alphabetical order, display all the current Actors in alphabetical order, print the shortest path from one Actor to another, print the breadth first traversal from an Actor, as well as look up a certain Actor by a given name. These functions will be mentioned in the list of UI required functions.</span></p><ul class="c2 lst-kix_9fgmxh8kmqlq-0 start"><li class="c1 c6"><span>p</span><span class="c0">ublic static void main(String[] args)</span></li></ul><ul class="c2 lst-kix_9fgmxh8kmqlq-1 start"><li class="c1 c8"><span class="c0">The main method runs a menu driven application which creates an ActionGraph instance and then prompts the user for a menu command selecting the operation. The required information is then requested from the user based on the selected operation. </span></li></ul><p class="c1 c4"><span class="c0"></span></p><p class="c1"><span class="c18">Warning:</span><span>&nbsp;You should make sure that you catch </span><span class="c13">ALL </span><span>exceptions that you throw anywhere in your code. Exceptions are used to indicate illegal or unsupported operations so that your program can handle unexpected events gracefully and prevent a crash. Your program should </span><span class="c13">NOT </span><span>crash from any of the above exceptions (</span><span class="c21">it should not crash from any exception,but especially not one that you throw yourself</span><span class="c0">).</span></p><hr><p class="c1 c4"><span class="c0"></span></p><p class="c11"><span class="c16 c13">UI Required Functions</span></p><p class="c11 c4"><span class="c16 c13"></span></p><p class="c1"><span class="c0">Menu:</span></p><p class="c1 c25"><span>I) </span><span>Import a Movie<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A) Print all actors<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;M) Print all movies<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;P) Print the shortest path between two actors.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B) Print the BFS (Breadth First Search) from a given actor<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;L) Lookup Actor By Name<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q</span><span>) Quit<br></span></p><hr><p></p><p class="c11"><span class="c16 c13">Extra Assistance</span></p><p class="c11"><span class="c0">List vs ArrayList</span></p><p class="c1"><span class="c0">You may have noticed some datatypes were specified as List&lt;Type&gt; instead of ArrayList. This is because List is an interface from the Collections package which names the common list operations. ArrayList is an implementation. While you may feel free to use ArrayList&lt;Type&gt; in place of every List referenced throughout, by using List you will ensure that your code would work if you were to change to using a linked list instead.</span></p><p class="c1"><span>The preferred way of using the List class is to do </span><span class="c5">List&lt;Object&gt; list = new ArrayList&lt;&gt;();</span></p><p class="c1"><span class="c0">and then use the methods you learned previously.</span></p><p class="c1"><span class="c0">Such details are more important in design-based Computer Science classes, but an early introduction is helpful.</span></p><p class="c11"><span class="c0">Comparable Interface</span></p><p class="c1"><span class="c7">&nbsp; /*</span></p><p class="c1"><span class="c7">&nbsp; &nbsp; * An example of type abstraction that implements Comparable</span></p><p class="c1"><span class="c7">&nbsp; &nbsp; * and Comparator interfaces.</span></p><p class="c1"><span class="c7">&nbsp; &nbsp; *</span></p><p class="c1"><span class="c7">&nbsp; &nbsp; * The Comparable/Comparator interfaces provide a standard means</span></p><p class="c1"><span class="c7">&nbsp; &nbsp; * for communication with yet unknown types of objects.</span></p><p class="c1"><span class="c7">&nbsp; &nbsp; */</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; public class CollectionsTester {</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; public static void main(String[] args) {</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ArrayList&lt;Employee&gt; staff = new ArrayList&lt;Employee&gt;();</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; staff.add(new Employee("Joe",100000, 177700010));</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; staff.add(new Employee("Jane",200000, 111100010));</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; staff.add(new Employee("Bob",66666, 1999000010));</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; staff.add(new Employee("Andy",77777, 188800010));</span></p><p class="c1"><span class="c10">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Collections.sort(staff); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c7">// Sort by salary</span></p><p class="c1"><span class="c10">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Lowest paid employee: "+staff.get(0)); &nbsp; &nbsp;</span><span class="c7">// Prints Bob</span></p><p class="c1"><span class="c10">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Collections.sort(staff, new NameComparator()); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c7">// Sort by alphabetical order</span></p><p class="c1"><span class="c10">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("First employee in list: "+staff.get(0)); &nbsp;</span><span class="c7">// Prints Andy</span></p><p class="c1"><span class="c10">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Collections.sort(staff, new IdComparator()); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c7">// Sort by ID number</span></p><p class="c1"><span class="c10">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Employee with lowest ID: "+staff.get(0)); </span><span class="c7">// Prints Jane</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; }</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; public class Employee implements Comparable {</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; private String name;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; private int salary;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; private int id;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; public Employee(String initName, int initSal, int initId) {</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; id &nbsp; &nbsp; = initId;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name = initName;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; salary = initSal;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; public String getName(){ return name; }</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; public int getSalary() { return salary; }</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; public int getId(){ return id; }</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; public void setSalary(int newSalary) {</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; salary = newSalary;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; public int compareTo(Object o) {</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Employee otherEmp = (Employee)o;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (this.salary == otherEmp.salary)</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 0;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else if (this.salary &gt; otherEmp.salary)</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 1;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return -1;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; public String toString() {</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return name + ", $" + salary + ", "+ id;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; }</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; public class NameComparator implements Comparator {</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; public int compare(Object o1, Object o2) {</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Employee e1 = (Employee) o1;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Employee e2 = (Employee) o2;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (e1.getName().compareTo(e2.getName()));</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; }</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; public class IdComparator implements Comparator {</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; public int compare(Object o1, Object o2) {</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Employee e1 = (Employee) o1;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Employee e2 = (Employee) o2;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (e1.getId() == e2.getId())</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 0;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else if (e1.getId() &gt; e2.getId())</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 1;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return -1;</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; }</span></p><p class="c1 c4"><span class="c0"></span></p><hr><p class="c1 c4"><span class="c0"></span></p><p class="c11"><span class="c16 c13">General Recommendations</span></p><p class="c1"><span class="c0">You might want to implement a toString() method for classes to make debugging and printing easier. You do not have to do this, but it will help you.</span></p><p class="c1 c4"><span class="c0"></span></p><p class="c1"><span class="c0">You can feel free to add extra methods and variables if you need.</span></p><hr><p class="c1 c4"><span class="c0"></span></p><p class="c11"><span class="c16 c13">Big Data Sample Program</span></p><p class="c1"><span class="c0">import java.util.Scanner;</span></p><p class="c1 c4"><span class="c0"></span></p><p class="c1"><span class="c0">import big.data.DataSource;</span></p><p class="c1"><span class="c0">public class BigDataMovieExample {</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public static void main(String args[]){</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scanner sc = new Scanner(System.in);</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String title="";</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; do{</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print("Enter a movie title: ");</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//generate the webaddress for the movie</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String prefix= "http://www.omdbapi.com/?t=";</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title=sc.nextLine();</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String postfix="&amp;y=&amp;plot=short&amp;r=xml";</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(title.length()&gt;0){</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataSource ds = DataSource.connectXML(prefix+title.replace(' ','+')+postfix);</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ds.load();</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("true title: "+ds.fetchString("movie/title"));</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("actors: "+ds.fetchString("movie/actors"));</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; System.out.println("year: " + ds.fetchInt("movie/year"));</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; } while(title.length()&gt;0);</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; </span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("done.");</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p class="c1"><span class="c0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p class="c1"><span class="c0">}</span></p><p class="c1 c4"><span class="c0"></span></p><hr><p class="c1 c4"><span class="c0"></span></p><p class="c11"><span class="c13">Output Format</span></p><p class="c1"><span class="c0">All lists must be printed in a nice and tabular form as shown in the sample output. You may use C style formatting as shown in the following example. The example below shows two different ways of displaying the name and address at pre-specified positions 21, 26, 19, and 6 spaces wide. If the ‘-’ flag is given, then it will be left-justified (padding will be on the right), else the region is right-justified. The ‘s’ identifier is for strings, the ‘d’ identifier is for integers. Giving the additional ‘0’ flag pads an integer with additional zeroes in front.</span></p><p class="c1"><span class="c0">&nbsp; &nbsp; </span></p><p class="c1"><span class="c0">&nbsp; &nbsp; String name = "Doe Jane";<br> &nbsp; &nbsp;String address = "32 Bayview Dr.";<br> &nbsp; &nbsp;String city = "Fishers Island, NY";<br> &nbsp; &nbsp;int zip = 6390;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;System.out.println(String.format("%-21s%-26s%19s%06d", name, address, city, zip));<br> &nbsp; &nbsp;System.out.printf("%-21s%-26s%19s%06d", name, address, city, zip);<br><br> &nbsp; // Output<br> &nbsp; &nbsp;Doe Jane &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 32 Bayview Dr. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Fishers Island, NY 06390<br> &nbsp; &nbsp;Doe Jane &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 32 Bayview Dr. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Fishers Island, NY 06390</span></p><hr><p class="c1 c4"><span class="c0"></span></p><p class="c11"><span class="c13">Sample Input/Output</span></p><p class="c1 c4"><span class="c5"></span></p><p class="c1"><span class="c5">Welcome to the Kevin Bacon Calculator!</span></p><p class="c1"><span class="c5">Options:</span></p><p class="c1"><span class="c5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;I) Import a Movie</span></p><p class="c1"><span class="c5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A) Print all actors</span></p><p class="c1"><span class="c5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;M) Print all movies</span></p><p class="c1"><span class="c5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;P) Print the shortest path between two actors.</span></p><p class="c1"><span class="c5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B) Print the BFS (Breadth First Search) from a given actor</span></p><p class="c1"><span class="c5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;L) Lookup Actor By Name</span></p><p class="c1"><span class="c5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q) Quit</span></p><p class="c1"><span class="c5">Please enter an option: i</span></p><p class="c1"><span class="c5">Enter the movie title: the big lebowski</span></p><p class="c1"><span class="c5">The Big Lebowski(1998) Starring: Jeff Bridges, John Goodman, Julianne Moore, Steve Buscemi</span></p><p class="c1"><span class="c5">Please enter an option: i</span></p><p class="c1"><span class="c5">Enter the movie title: k-pax</span></p><p class="c1"><span class="c5">K-PAX(2001) Starring: Kevin Spacey, Jeff Bridges, Mary McCormack, Alfre Woodard</span></p><p class="c1"><span class="c5">Please enter an option: i</span></p><p class="c1"><span class="c5">Enter the movie title: titanic</span></p><p class="c1"><span class="c5">Titanic(1997) Starring: Leonardo DiCaprio, Kate Winslet, Billy Zane, Kathy Bates</span></p><p class="c1"><span class="c5">Please enter an option: i</span></p><p class="c1"><span class="c5">Enter the movie title: Wolf of wall street</span></p><p class="c1"><span class="c5">The Wolf of Wall Street(2013) Starring: Leonardo DiCaprio, Jonah Hill, Margot Robbie, Matthew McConaughey</span></p><p class="c1"><span class="c5">Please enter an option: i</span></p><p class="c1"><span class="c5">Enter the movie title: apollo 13</span></p><p class="c1"><span class="c5">Apollo 13(1995) Starring: Tom Hanks, Bill Paxton, Kevin Bacon, Gary Sinise</span></p><p class="c1"><span class="c5">Please enter an option: p</span></p><p class="c1"><span class="c5">Please enter the first name: Tom Hanks</span></p><p class="c1"><span class="c5">Please enter the second name: Kathy Bates</span></p><p class="c1"><span class="c5">No path.</span></p><p class="c1"><span class="c5">Please enter an option: m</span></p><p class="c1"><span class="c5">Here is the alphabetic list of movies:</span></p><p class="c1"><span class="c5">-----------------------------------------------</span></p><p class="c1"><span class="c5">Apollo 13</span></p><p class="c1"><span class="c5">K-PAX</span></p><p class="c1"><span class="c5">The Big Lebowski</span></p><p class="c1"><span class="c5">The Wolf of Wall Street</span></p><p class="c1"><span class="c5">Titanic</span></p><p class="c1"><span class="c5">Please enter an option: a</span></p><p class="c1"><span class="c5">Here is the alphabetic list of actors:</span></p><p class="c1"><span class="c5">-----------------------------------------------</span></p><p class="c1"><span class="c5">Alfre Woodard</span></p><p class="c1"><span class="c5">Bill Paxton</span></p><p class="c1"><span class="c5">Billy Zane</span></p><p class="c1"><span class="c5">Gary Sinise</span></p><p class="c1"><span class="c5">Jeff Bridges</span></p><p class="c1"><span class="c5">John Goodman</span></p><p class="c1"><span class="c5">Jonah Hill</span></p><p class="c1"><span class="c5">Julianne Moore</span></p><p class="c1"><span class="c5">Kate Winslet</span></p><p class="c1"><span class="c5">Kathy Bates</span></p><p class="c1"><span class="c5">Kevin Bacon</span></p><p class="c1"><span class="c5">Kevin Spacey</span></p><p class="c1"><span class="c5">Leonardo DiCaprio</span></p><p class="c1"><span class="c5">Margot Robbie</span></p><p class="c1"><span class="c5">Mary McCormack</span></p><p class="c1"><span class="c5">Matthew McConaughey</span></p><p class="c1"><span class="c5">Steve Buscemi</span></p><p class="c1"><span class="c5">Tom Hanks</span></p><p class="c1"><span class="c5">Please enter an option: i</span></p><p class="c1"><span class="c5">Enter the movie title: catch me if you can</span></p><p class="c1"><span class="c5">Catch Me If You Can(2002) Starring: Leonardo DiCaprio, Tom Hanks, Christopher Walken, Martin Sheen</span></p><p class="c1"><span class="c5">Please enter an option: p</span></p><p class="c1"><span class="c5">Please enter the first name: Kevin Bacon</span></p><p class="c1"><span class="c5">Please enter the second name: Jonah Hill</span></p><p class="c1"><span class="c5">Kevin Bacon, Tom Hanks, Leonardo DiCaprio, Jonah Hill</span></p><p class="c1"><span class="c5">Please enter an option: b</span></p><p class="c1"><span class="c5">Enter a starting actor: Steve Buscemi</span></p><p class="c1"><span class="c5">Steve Buscemi, Jeff Bridges, John Goodman, Julianne Moore, Kevin Spacey, Mary McCormack, Alfre Woodard</span></p><p class="c1"><span class="c5">Please enter an option: L</span></p><p class="c1"><span class="c5">Enter a name: Jeff Bridges</span></p><p class="c1"><span class="c5">Actor: Jeff Bridges Friends: John Goodman, Julianne Moore, Steve Buscemi, Kevin Spacey, Mary McCormack, Alfre Woodard Movies: The Big Lebowski(1998), K-PAX(2001)</span></p><p class="c1"><span class="c5">Please enter an option: a</span></p><p class="c1"><span class="c5">Here is the alphabetic list of actors:</span></p><p class="c1"><span class="c5">-----------------------------------------------</span></p><p class="c1"><span class="c5">Alfre Woodard</span></p><p class="c1"><span class="c5">Bill Paxton</span></p><p class="c1"><span class="c5">Billy Zane</span></p><p class="c1"><span class="c5">Christopher Walken</span></p><p class="c1"><span class="c5">Gary Sinise</span></p><p class="c1"><span class="c5">Jeff Bridges</span></p><p class="c1"><span class="c5">John Goodman</span></p><p class="c1"><span class="c5">Jonah Hill</span></p><p class="c1"><span class="c5">Julianne Moore</span></p><p class="c1"><span class="c5">Kate Winslet</span></p><p class="c1"><span class="c5">Kathy Bates</span></p><p class="c1"><span class="c5">Kevin Bacon</span></p><p class="c1"><span class="c5">Kevin Spacey</span></p><p class="c1"><span class="c5">Leonardo DiCaprio</span></p><p class="c1"><span class="c5">Margot Robbie</span></p><p class="c1"><span class="c5">Martin Sheen</span></p><p class="c1"><span class="c5">Mary McCormack</span></p><p class="c1"><span class="c5">Matthew McConaughey</span></p><p class="c1"><span class="c5">Steve Buscemi</span></p><p class="c1"><span class="c5">Tom Hanks</span></p><p class="c1"><span class="c5">Please enter an option: m</span></p><p class="c1"><span class="c5">Here is the alphabetic list of movies:</span></p><p class="c1"><span class="c5">-----------------------------------------------</span></p><p class="c1"><span class="c5">Apollo 13</span></p><p class="c1"><span class="c5">Catch Me If You Can</span></p><p class="c1"><span class="c5">K-PAX</span></p><p class="c1"><span class="c5">The Big Lebowski</span></p><p class="c1"><span class="c5">The Wolf of Wall Street</span></p><p class="c1"><span class="c5">Titanic</span></p><p class="c1"><span class="c5">Please enter an option: q</span></p><p class="c1 c4"><span class="c5"></span></p></body></html>